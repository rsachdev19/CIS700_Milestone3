Stephanie:
			1. Reworked original code to save data to common directory,
			using unique naming for ease of compartmentalized running and testing
			2. Restructured report for use with M2
			3. Added cGan model to code as per M2 requirement and discussed it
			4. Added new components to use more visual comparisons using csv data generation from trainings
				a. added utils for visuals with metric charts for test model metrics pulled from generated csv
				    1. location: utils/visual.py
                b. cleaned up code and took test text files for synthetic data generated and put into dataframes for a more visual experience
            5. Generic code cleanup in files, removed residual hard coded epoch setters so that all files make use of main GAN setter

            Further modifications as part of Midterm efforts:
                Additional modifications applied to this project under this midterm work:
                    * Fixed LeakGAN project to work and run properly by setting standardized default flag attributes in main.py
                    * Update models to save off test files for each training type run (ie oracle, cfg, real)
                    * Updated models to use unified naming schema for test files, with model as the model the file was generated for and training as the training the data was generated from

                        **Example:**
                            * experiment-log-model-training.csv
                            * oracle-model-training.txt
                            * generator-model-training.txt
                            * test_file-model-training.txt

                    * Updated visual.py to grab files from directory and generate visual charts from relevant files
                    * Updated models to set file name in main.py on the GAN model directly instead of in each model file themselves
                    * Added additional field called 'log_file' to be the name for the experiment-log file data
                    * Update to add new dir for midterm content vs milestone project
                    * Allow visual.py to take directory param. if none exist, default to /content/CIS-700/results
                    * Allow main.py to take a results output directory via arg -o, if arg not present sets to results/
Jackson:
			1. Added InfoGAN model to code as per M2 requirement and discussed it
Ravjot:
			1. Added DCGAN model to code as per M2 requirement and discussed it